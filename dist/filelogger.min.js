/*!
 * fileLogger
 * Copyright 2016 Peter Bakondy https://github.com/pbakondy
 * See LICENSE in this repository for license information
 */
!function(){!function(){angular.module("fileLogger",["ngCordova.plugins.file"]).factory("$fileLogger",["$q","$window","$cordovaFile","$timeout","$filter",function(e,o,r,n,t){"use strict";function a(){return o.parent&&o.parent.ripple}function l(){return!o.cordova&&!o.PhoneGap&&!o.phonegap||a()}function i(e){angular.isString(e)?(e=e.toUpperCase(),R.indexOf(e)===-1&&(e="INFO")):e="INFO";for(var o,r=new Date,n=b?t("date")(r,b,S):r.toJSON(),a=Array.prototype.slice.call(arguments,1),l=[n,e],i=0;i<a.length;i++)if(angular.isArray(a[i])){o="[Array]";try{o=JSON.stringify(a[i])}catch(s){}l.push(o)}else if(angular.isObject(a[i])){o="[Object]";try{o=JSON.stringify(a[i])}catch(s){}l.push(o)}else l.push(a[i]);if(a.unshift(n),angular.isObject(console)&&angular.isFunction(console.log))switch(e){case"DEBUG":angular.isFunction(console.debug)?console.debug.apply(console,a):console.log.apply(console,a);break;case"INFO":angular.isFunction(console.debug)?console.info.apply(console,a):console.log.apply(console,a);break;case"WARN":angular.isFunction(console.debug)?console.warn.apply(console,a):console.log.apply(console,a);break;case"ERROR":angular.isFunction(console.debug)?console.error.apply(console,a):console.log.apply(console,a);break;default:console.log.apply(console,a)}O.push({message:l.join(" ")+"\n"}),j||c()}function c(){if(!O.length)return void(j=!1);j=!0;var e=O.shift();s(e.message).then(function(){n(function(){c()})},function(){n(function(){c()})})}function s(n){var t=e.defer();if(l())o.localStorage[w]||(o.localStorage[w]=""),o.localStorage[w]+=n,t.resolve();else{if(!o.cordova||!o.cordova.file||!o.storageFolder)return t.reject("storageFolder is not available"),t.promise;r.checkFile(A,w).then(function(){r.writeExistingFile(A,w,n).then(function(){t.resolve()},function(e){t.reject(e)})},function(){r.writeFile(A,w,n,!0).then(function(){t.resolve()},function(e){t.reject(e)})})}return t.promise}function u(){var n=e.defer();if(l())n.resolve(o.localStorage[w]);else{if(!o.cordova||!o.cordova.file||!o.storageFolder)return n.reject("storageFolder is not available"),n.promise;r.readAsText(A,w).then(function(e){n.resolve(e)},function(e){n.reject(e)})}return n.promise}function f(){var n=e.defer();if(l())o.localStorage.removeItem(w),n.resolve();else{if(!o.cordova||!o.cordova.file||!o.storageFolder)return n.reject("storageFolder is not available"),n.promise;r.removeFile(A,w).then(function(e){n.resolve(e)},function(e){n.reject(e)})}return n.promise}function g(e){return!!(angular.isString(e)&&e.length>0)&&(A=e,!0)}function p(e){return!!(angular.isString(e)&&e.length>0)&&(w=e,!0)}function d(e,o){if(!angular.isUndefined(e)&&!angular.isString(e))throw new TypeError("format parameter must be a string or undefined");if(!angular.isUndefined(o)&&!angular.isString(o))throw new TypeError("timezone parameter must be a string or undefined");b=e,S=o}function v(){var n=e.defer();if(l())n.resolve({name:w,localURL:"localStorage://localhost/"+w,type:"text/plain",size:o.localStorage[w]?o.localStorage[w].length:0});else{if(!o.cordova||!o.cordova.file||!o.storageFolder)return n.reject("storageFolder is not available"),n.promise;r.checkFile(A,w).then(function(e){e.file(n.resolve,n.reject)},n.reject)}return n.promise}function y(){var e=Array.prototype.slice.call(arguments,0);e.unshift("DEBUG"),i.apply(void 0,e)}function h(){var e=Array.prototype.slice.call(arguments,0);e.unshift("INFO"),i.apply(void 0,e)}function m(){var e=Array.prototype.slice.call(arguments,0);e.unshift("WARN"),i.apply(void 0,e)}function F(){var e=Array.prototype.slice.call(arguments,0);e.unshift("ERROR"),i.apply(void 0,e)}var b,S,O=[],j=!1,R=["DEBUG","INFO","WARN","ERROR"],w="messages.log",A=cordova.file.externalDataDirectory;return{log:i,getLogfile:u,deleteLogfile:f,setStorageFoldername:g,setStorageFilename:p,setTimestampFormat:d,checkFile:v,debug:y,info:h,warn:m,error:F}}])}()}();